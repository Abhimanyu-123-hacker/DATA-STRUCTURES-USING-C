#include<Stdio.h>
#include<string.h>
int checkbalanced(char *str){
    int len =strlen(str);
    char stack[len];
    int top=-1;
    for(int i=0;i<len;i++){
        char ch=str[i];
        if(ch=='(' ||ch=='{' || ch=='[')
            stack[++top]=ch;
        else if(ch==')' || ch=='}' || ch==']'){
            if(top==-1)
            return 0;
            else if(ch==')' && stack[top]!='(')
            return 0;
            else if(ch=='}' && stack[top]!='{')
            return 0;
            else if(ch==']' && stack[top]!='[')
            return 0;
            else 
            top--;
        }
     }
    if(top==-1)                // stack is found empty only when there is nothing in the stack it means all the parenthessis are correct
    return 1;
    else 
    return 0;
}
int main(){
    char str[100];
    printf("enter the string expression");
    gets(str);
    int result =checkbalanced(str);
    if(result==1)
    printf("balanced");
    else
    printf("not balanced");
    return 0;
}
